/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Classes;

import java.util.ArrayList;
import java.util.HashMap;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author Kasper
 */
public class Setter {
    private static InfDB hwdb;
    
    public static void updateStudentID(InfDB db, int gid, int nid){
        try{
            db.update("UPDATE ELEV SET ELEV_ID = " + nid + "WHERE ELEV_ID =" + gid);
        }
        catch(InfException e){
            System.out.println("Error update ID");
        }
    }
    
    
    public static void updateStudentFirstname(InfDB db, int id, String nName){
        
        try{
        db.update("UPDATE ELEV SET FORNAMN = '" + nName +  "' WHERE ELEV_ID = " + id);
        System.out.println("Bra");
        }
        
        catch(Exception e){
            System.out.println("AJajaj");
        }
        
    }
    
    public static void updateStudentSurname(InfDB db, int id, String nName){
        try{
            db.update("UPDATE ELEV SET EFTERNAMN = '" + nName +  "' WHERE ELEV_ID = " + id);
            System.out.println("Success");
        }
        catch(InfException e){
            System.out.println("Something went wrong");
        }   
    }
    
    public static void updateStudentSovsal(InfDB db, int id, int nSovsal){
        try{
            db.update("UPDATE ELEV SET SOVSAL = '" + nSovsal +  "' WHERE ELEV_ID = " + id);
        }
        catch(InfException e){
            System.out.println("Something went wrong.");
        }
    }
    
    public static int upDateDormitoryPoints(InfDB db, String d, int p){
        int np = 0;
        try{
            String newpoint = db.fetchSingle("SELECT HUSPOANG FROM ELEVHEM WHERE ELEVHEMSNAMN = '" + d + "'");
            np = Integer.parseInt(newpoint) + p;
            db.update("UPDATE ELEVHEM SET HUSPOANG = "+ np + " WHERE ELEVHEMSNAMN = '" + d + "'");
            
        }
        catch(InfException e){
            System.out.println("Something went wrong");
        }
        return np;
    }
    
    public static void updateGradeOnStudent(InfDB db, String firstname, String surname, String grade){
            
        ArrayList<HashMap<String, String>> student;
        try{
            //student = db.fetchRows("SELECT ELEV_ID, KURS_ID, KURSBETYG FROM ELEV JOIN REGISTRERAD_PA ON ELEV.ELEV_ID = REGISTRERAD_PA.ELEV_ID JOIN HAR_BETYG_I ON HAR_BETYG_I.ELEV_ID = "
            //        + "ELEV.ELEV_ID WHERE FORNAMN = '" + firstname + "' AND EFTERNAMN = '" + surname + "'");
            //for(HashMap<String,String> thing : student){
            //    if(thing.get(""))
            
            
            }
            
        
        catch(Exception e){
        
        }
    }
    
    public static void upDatePassword(InfDB db, String newPass){
        
        try{
            db.update("UPDATE LARARE SET LOSENORD = '" + newPass + "' WHERE LARAR_ID = " + Huvudf√∂nster.id);
            System.out.println("Password is changed");
        }
        catch(Exception e){
            
        }
    }
    
    public static void addElev(InfDB db, String firstname, String surname,int sovsal){
        int id;
        try{
            id = Integer.parseInt(db.fetchSingle("SELECT * FROM ELEV") + 1);
            db.insert("INSERT INTO ELEV VALUES(" + id + ", '" + firstname +  "' , '" + surname + "' , " + sovsal + ")");
            
            
        }
        catch(InfException e){
                
        }   
    }
    
    public static void addTeacher(InfDB db, String firstname, String surname, String pass, String admin){
        int id;
        try{
            id = Integer.parseInt(db.fetchSingle("SELECT * FROM LARARE") + 1);
            db.insert("INSERT INTO LARARE VALUES(" + id + ", '" + firstname +  "' , '" + surname + "' , " + pass + "' , '" + admin + "' )");
            
            
        }
        catch(InfException e){
                
        }   
    }
    public static void giveAdmin(InfDB db, int id, String admin){
        try{
            db.update("UPDATE LARARE SET ADMINISTRATOR = '" + admin + "' WHERE LARAR_ID =" + id);
        }
        catch(Exception e){
            
        }
    }
    public static void addCourse(InfDB db, int id, String courseName, String courseStart, String courseEnd, int teacherID, int subjectBelonging){
        try{
            db.insert("INSERT INTO KURS VALUES(" + id + ", '" + courseName + "', '" + courseStart + "', '" + courseEnd + "', " + teacherID + ", " + subjectBelonging);
            
        }
        catch(Exception e){
            
        }
    }
    
    public static void updateTeacherFirstname(InfDB db, int id, String nName){
        
        try{
        db.update("UPDATE LARARE SET FORNAMN = '" + nName +  "' WHERE LARA_ID = " + id);
        System.out.println("Bra");
        }
        
        catch(Exception e){
            System.out.println("Error updateTeacherfirstname");
        }
        
    }
    
    public static void updateTeacherSurname(InfDB db, int id, String nName){
        try{
            db.update("UPDATE LARARE SET EFTERNAMN = '" + nName +  "' LARAR_ID = " + id);
            System.out.println("Success");
        }
        catch(InfException e){
            System.out.println("Error in updateTeacherSurname");
        }   
    }
    
        
        
}
    
    

